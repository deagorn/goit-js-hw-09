{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,MAAOC,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,mBAC/BG,IAAKJ,SAASC,cAAc,UAC5BI,KAAML,SAASC,cAAc,SAG/BH,EAAKO,KAAKC,iBAAiB,UAE3B,SAAqBC,G,kBASjB,IAAIC,EAAaC,EAAaC,GAAaC,EAAI,GAC/CC,YAAW,WASf,IAAuBC,EAAUd,EACzBe,EADeD,EARHF,EAQaZ,EARVS,EASfM,EAAgBC,KAAKC,SAAW,GAEvB,IAAIC,SAAQ,SAACC,EAASC,GAC/BL,EACFI,EAAQtB,EAAAwB,OAAOC,QAAQ,qBAAoCC,OAAfT,EAAS,QAAYS,OAANvB,KAE3DoB,EAAOvB,EAAAwB,OAAOG,QAAQ,oBAAmCD,OAAfT,EAAS,QAAYS,OAANvB,I,MAdxDS,E,EAXLgB,QAAQC,IAAI3B,EAAKM,KACjBG,EAAEmB,iBAMF,IAJA,IAAMC,EAAcC,OAAO9B,EAAKK,OAAO0B,OACjCpB,EAAamB,OAAO9B,EAAKC,MAAM8B,OAC/BnB,EAAYkB,OAAO9B,EAAKI,KAAK2B,OAE1BC,EAAI,EAAGA,GAAKH,EAAaG,IAAGC,EAAAD,GAOrChC,EAAKO,KAAK2B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  btn: document.querySelector('button'),\n  form: document.querySelector('form'),\n}\n\nrefs.form.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(e) {\n  console.log(refs.btn);\n  e.preventDefault();\n  \n  const amountValue = Number(refs.amount.value);\n  const delayValue = Number(refs.delay.value);\n  const stepValue = Number(refs.step.value);\n  \n  for (let i = 1; i <= amountValue; i++) {\n    let totalDelay = delayValue + stepValue * (i - 1);\n    setTimeout(() => {\n      createPromise(i, totalDelay);\n    }, totalDelay);\n  };\n\n  refs.form.reset();\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(Notify.success(`Fulfilled promise ${position} in ${delay}`));\n    } else {\n      reject(Notify.failure(`Rejected promise ${position} in ${delay}`));\n    }\n });\n  return promise;\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delay","document","querySelector","step","amount","btn","form","addEventListener","e","totalDelay","delayValue","stepValue","i","setTimeout","position","shouldResolve","Math","random","Promise","resolve","reject","Notify","success","concat","failure","console","log","preventDefault","amountValue","Number","value","i1","_loop","reset"],"version":3,"file":"03-promises.eb76dad3.js.map"}